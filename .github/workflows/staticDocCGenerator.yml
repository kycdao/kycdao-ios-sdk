name: Generate DocC
# This Github Action generates the DocC documentation for the current repo
# Then pushes this newly generated `.doccarchive` to a second repo
# Netlify is configured to pick up any changes to this second repo and serve the doc online!

on:
  push:
    branches: [ main ]
    # we'll start this action on every push to main

jobs:
  Build-Github-Actions:
    runs-on: macos-12
    # we need to run eveything on macOS, as we need to have Xcode installed
    
    steps:
    - name: Use Xcode 14.0.1
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '14.0.1'
    
    # 1st, the Action will clone this repo (that contains the code)
    - name: Git Checkout
      uses: actions/checkout@v3
      with:
        path: 'mainBranch'
    # now we'll build the documentation
    - name: Build Doc Bundle ðŸ“—
      run: |
          echo "ðŸš€ Starting building Documentation"
          
          cd mainBranch
          
          # You can print out which version of Xcode is used in this GH Action with:
          # xcodebuild -version
          
          # Build the documentation bundle
          xcodebuild docbuild -scheme kycDAO-SDK -derivedDataPath ./docbuild -destination 'platform=iOS Simulator,OS=latest,name=iPhone 13 mini' -clonedSourcePackagesDirPath ./../SPM/docbuild > build_output.txt
          
          # I'm redirecting all output from building the project and docs to build_output.txt
          # If you want to see it (or need to debug some problem), uncomment next line
          # cat build_output.txt
          
          cd ..
          
    # Clone the docs repo
    - name: Git Checkout
      uses: actions/checkout@v3
      with:
        path: 'docsBranch'
        ref: 'docs'
          
    # Generate static HTML docs
    - name: Generate static HTML docs ðŸ“–
      run: |
      
          rm -rf ./docsBranch/docs ./docsBranch/doc_archives
      
          # Doc is built, but it's inside docbuild, let's find it
          DOCC_DIR=`find ./mainBranch/docbuild -type d -iname "KycDao.doccarchive"`
          
          echo "Copying DocC archives to doc_archives..."
          mkdir ./docsBranch/doc_archives
          cp -R "$DOCC_DIR" ./docsBranch/doc_archives
          
          ls -l
          ls -l ./docsBranch
          ls -l ./docsBranch/doc_archives
          
          rm -rf ./mainBranch
          
          echo "$DOCC_DIR"
          
          $(xcrun --find docc) process-archive transform-for-static-hosting --help
          
          xcrun --find docc
          xcrun xcodebuild -version
          
          mkdir ./docsBranch/docs
          
          $(xcrun --find docc) process-archive transform-for-static-hosting ./docsBranch/doc_archives/KycDao.doccarchive --hosting-base-path kycdao-ios-sdk --output-path docsBranch/docs
          
          rm -rf ./docsBranch/docs/index.html
          rm -rf ./docsBranch/docs/documentation/index.html
          
          cp ./docsBranch/RedirectPages/index.html ./docsBranch/docs/index.html
          cp ./docsBranch/RedirectPages/index.html ./docsBranch/docs/documentation
          
          ls -l ./docsBranch
          ls -l ./docsBranch/doc_archives
          ls -l ./docsBranch/docs
          
          cd docsBranch
          
          git add docs doc_archives
          
          git commit -m "Updated DocC documentation"
          
          git push origin
